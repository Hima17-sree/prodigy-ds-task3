# -*- coding: utf-8 -*-
"""prodigy-ds-task3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SIu6V768__TbUqKgT1YUwujm57gSXXL9
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier

from google.colab import files
files.upload()

data = pd.read_csv("bank.csv",delimiter=";")
data.head()

data.info()

print(data.columns)

target_variable = "y"

#features = data.drop(target_variable, axis=1)
target = data[target_variable]

features = pd.get_dummies(data.drop(target_variable, axis=1))

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2)

model = DecisionTreeClassifier()

new_var = model.fit(X_train, y_train)
new_var

# Make predictions on the test set
predictions = model.predict(X_test)
predictions

from sklearn.metrics import accuracy_score

accuracy = accuracy_score(y_test, predictions)
print("Accuracy:", accuracy)

from sklearn.metrics import precision_score
precision = precision_score(y_test, predictions, pos_label='yes')
print("Precision:", precision)

# Recall (measures the proportion of actual positives the model identified correctly)
from sklearn.metrics import recall_score
recall = recall_score(y_test, predictions, pos_label='yes')
print("Recall:", recall)

# F1-score (harmonic mean of precision and recall)
from sklearn.metrics import f1_score
f1 = f1_score(y_test, predictions, pos_label='yes')
print("F1-score:", f1)